(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{79:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return p})),r.d(t,"default",(function(){return b}));var a=r(2),n=r(6),c=(r(0),r(96)),o={id:"community-resources",title:"Community Resources",sidebar_label:"Community Resources"},i={unversionedId:"community-resources",id:"community-resources",isDocsHomePage:!1,title:"Community Resources",description:"Members of the PayID community have created useful resources for using and learning about PayID.",source:"@site/docs/community-resources.md",permalink:"/payid-documentation/review-apps/landing-page/aca845/community-resources",editUrl:"https://github.com/payid-org/payid-documentation/tree/master/docs/community-resources.md",sidebar_label:"Community Resources",sidebar:"docs",previous:{title:"Use RippleX Dev Kit With PayID",permalink:"/payid-documentation/review-apps/landing-page/aca845/ripplex-dev-kit-payid"},next:{title:"Release Notes",permalink:"/payid-documentation/review-apps/landing-page/aca845/release-notes"}},p=[],s={rightToc:p};function b(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Members of the PayID community have created useful resources for using and learning about PayID."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Tutorials")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=gpLJp1lylns"}),"PayID Youtube Tutorial by Ken Carabello"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Validators")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://payidvalidator.com/"}),"PayID Validator")," - An ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/rswarthout/payid-validator"}),"open-source project")," that validates responses using ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.payid.org/payid-interfaces"}),"JSON schemas")," and verifies whether your PayID server follows various ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"payid-best-practices"}),"best practices"),", like:"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"payid-headers"}),"HTTP response headers")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"payid-best-practices#cache-control"}),"Cache-Control")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"payid-best-practices#set-cors-cross-origin-resource-sharing-headers"}),"CORS accessibility")),Object(c.b)("li",{parentName:"ul"},"Response time"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/RockHoward/python-payid-validator"}),"Python-based PayID validator")," - Validates URI strings to determine if they are valid PayIDs."))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"PayID server implementations")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/RockHoward/django-payid-server"}),"Django PayID Server")," - A Django-based PayID server."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/WietseWind/PayID-Static"}),"PayID Static")," - A Node.js PayID server with static configuration (easy to use on Heroku).")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Community resources")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.reddit.com/r/PayIdDevs/"}),"PayID subreddit")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://chat.payid.org"}),"PayID Discord channel"))))}b.isMDXComponent=!0},96:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return d}));var a=r(0),n=r.n(a);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},c=Object.keys(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=n.a.createContext({}),b=function(e){var t=n.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=b(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),l=b(r),m=a,d=l["".concat(o,".").concat(m)]||l[m]||u[m]||c;return r?n.a.createElement(d,i(i({ref:t},s),{},{components:r})):n.a.createElement(d,i({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,o=new Array(c);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<c;s++)o[s]=r[s];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);